pipeline {
  agent any
 
  parameters {
    choice(
        name: 'SERVER', 
        description: 'Servidor donde ejecutar el proceso',
        choices: ["TODOS", "SERVIDOR 1", "SERVIDOR 2", "SERVIDOR 3"]
       )
  } 
  stages {
    stage('Execute task in bd') {
      steps {
        script {
           def executors = [:]
           servers = readJSON file: "servers.json"
           fileContents = readFile file: "restore_db.sh"
           servers['SERVERS'].each {
              server ->  
              if (params.SERVER == 'TODOS' || params.SERVER == servers['SERVERS']) {
                    executors[server] = {
                            node {
                              def remote = [:]
                              remote.name = servers[server]['name']
                              remote.host = servers[server]['host']
                              remote.user = servers[server]['user']
                              remote.password = servers[server]['password']
                              remote.allowAnyHosts = true
                              stage('Remote SSH') {
                                sshCommand remote: remote, command: fileContents
                              }
                            }
                    }
              }
              }
              parallel executors
        }
      }
    }
  }
}
